mutation UpsertTeamMember($data: team_members_insert_input!) {
  insert_team_members_one(
    object: $data
    on_conflict: {
      constraint: team_members_company_id_person_id_key
      update_columns: [function, title, founder, start_date, end_date]
    }
  ) {
    id
    function
    person_id
    company_id
    title
    start_date
    end_date
    seniority
  }
}

mutation InsertTeamMember($personId: Int, $companyId: Int, $vcFirmId: Int) {
  insert_team_members_one(
    object: { person_id: $personId, company_id: $companyId }
    on_conflict: {
      constraint: team_members_company_id_person_id_key
      update_columns: []
    }
  ) {
    id
  }
}

query GetTeamMemberByPersonId($person_id: Int!) {
  team_members(where: { person_id: { _eq: $person_id } }) {
    id
    company_id
  }
}

query GetTeamMemberByCompanyIds($company_ids: [Int!]) {
  team_members(where: { company_id: { _in: $company_ids } }) {
    id
    company_id
    company {
      id
      name
      slug
      logo
    }
    person_id
    person {
      id
      name
      slug
      picture
      personal_email
      work_email
    }
  }
}

query GetTeamMemberById($id: Int!) {
  team_members(where: { id: { _eq: $id } }, limit: 1) {
    id
    company_id
    person {
      id
      name
      slug
      picture
      personal_email
      work_email
      status
    }
  }
}

query GetTeamMembers(
  $limit: Int
  $offset: Int
  $orderBy: [team_members_order_by!]
  $where: team_members_bool_exp!
) {
  team_members(
    where: $where
    order_by: $orderBy
    limit: $limit
    offset: $offset
  ) {
    id
    company_id
    person {
      id
      slug
      name
      picture
      linkedin
      personal_email
      work_email
    }
    function
    start_date
    end_date
    founder
    title
  }
  team_members_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetInvestors(
  $limit: Int
  $offset: Int
  $orderBy: [investors_order_by!]
  $where: investors_bool_exp!
) {
  investors(where: $where, order_by: $orderBy, limit: $limit, offset: $offset) {
    id
    vc_firm_id
    person {
      id
      slug
      name
      picture
      linkedin
      personal_email
      work_email
    }
    function
    start_date
    end_date
    founder
    title
  }
  # investors_aggregate(where: $where) {
  #   aggregate {
  #     count
  #   }
  # }
}
