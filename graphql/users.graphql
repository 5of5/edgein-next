query GetUserProfile($id: Int!) {
  users_by_pk(id: $id) {
    id
    credits
    billing_org_id
    preferences
    organization_companies {
      id
      company {
        id
        slug
        name
        logo
        overview
        location
      }
    }
    organization_vc_firms {
      id
      vc_firm {
        id
        slug
        name
        logo
        overview
        location
      }
    }
    person {
      id
      name
      personal_email
      picture
      slug
      status
      type
      work_email
      linkedin
      github
      city
      country
      facebook_url
      twitter_url
      website_url
      about
      email
      team_members {
        id
        end_date
        start_date
        founder
        function
        title
        company {
          id
          slug
          name
          logo
          overview
          location
        }
      }
      investments {
        investment_round {
          id
          round_date
          round
          amount
          company {
            id
            slug
            name
            logo
          }
        }
      }
    }
  }
}

query GetUserByPersonId($person_id: Int!) {
  users(where: { person_id: { _eq: $person_id } }) {
    id
    credits
    billing_org_id
    organization_companies {
      id
      company {
        id
        slug
        name
        logo
        overview
        location
      }
    }
    organization_vc_firms {
      id
      vc_firm {
        id
        slug
        name
        logo
        overview
        location
      }
    }
    person {
      id
      name
      personal_email
      picture
      slug
      status
      type
      work_email
      linkedin
      github
      city
      country
      facebook_url
      twitter_url
      website_url
      about
      email
      team_members {
        id
        end_date
        start_date
        founder
        function
        title
        company {
          id
          slug
          name
          logo
          overview
          location
        }
      }
      investments {
        investment_round {
          id
          round_date
          round
          amount
          company {
            id
            slug
            name
            logo
          }
        }
      }
    }
  }
}

query GetUserByPk($userId: Int!) {
  users_by_pk(id: $userId) {
    id
    additional_emails
    email
  }
}

mutation UpdateUserAdditionalEmailsByPk($userId: Int!, $emails: jsonb) {
  update_users_by_pk(
    pk_columns: { id: $userId }
    _set: { additional_emails: $emails }
  ) {
    id
  }
}

query GetUserByEmail($email: String) {
  users(where: { email: { _eq: $email } }, limit: 1) {
    id
    email
    role
    external_id
    is_auth0_verified
    display_name
    auth0_linkedin_id
    auth0_user_pass_id
    reference_id
    credits
    billing_org_id
    person {
      name
      picture
      slug
      id
    }
    additional_emails
    active
    onboarding_information
    feature_flags
  }
}

query GetUserById($id: Int) {
  users(where: { id: { _eq: $id } }, limit: 1) {
    id
    email
    role
    external_id
    is_auth0_verified
    display_name
    auth0_linkedin_id
    auth0_user_pass_id
    reference_id
    credits
    billing_org_id
    billing_org {
      customer_id
    }
    person {
      name
      picture
    }
    additional_emails
    onboarding_information
    feature_flags
    preferences
  }
}

mutation UpdateUserBillingOrg($userId: Int!, $billingOrgId: Int!) {
  update_users_by_pk(
    pk_columns: { id: $userId }
    _set: { billing_org_id: $billingOrgId }
  ) {
    id
  }
}

mutation UpsertUsers(
  $external_id: String
  $email: String
  $role: String
  $display_name: String
  $auth0_linkedin_id: String
  $auth0_user_pass_id: String
  $reference_user_id: Int
) {
  insert_users(
    objects: [
      {
        external_id: $external_id
        email: $email
        role: $role
        display_name: $display_name
        auth0_linkedin_id: $auth0_linkedin_id
        auth0_user_pass_id: $auth0_user_pass_id
        reference_user_id: $reference_user_id
      }
    ]
    on_conflict: { constraint: users_email_key, update_columns: [external_id] }
  ) {
    returning {
      id
      email
      role
      external_id
      is_auth0_verified
      display_name
      auth0_linkedin_id
      auth0_user_pass_id
      reference_id
      credits
      billing_org_id
      person {
        name
        picture
        slug
        id
      }
      additional_emails
      active
    }
  }
}

mutation UpdateUserEmailVerifiedStatus(
  $email: String!
  $is_auth0_verified: Boolean
) {
  update_users(
    where: { email: { _eq: $email } }
    _set: { is_auth0_verified: $is_auth0_verified }
  ) {
    affected_rows
    returning {
      id
      email
      role
      external_id
      is_auth0_verified
      display_name
      auth0_linkedin_id
      auth0_user_pass_id
      reference_id
      credits
      billing_org_id
      person {
        name
        picture
        slug
        id
      }
      additional_emails
      active
    }
  }
}

mutation UpdateUserAuth0LinkedInId(
  $email: String!
  $auth0_linkedin_id: String
) {
  update_users(
    where: { email: { _eq: $email } }
    _set: { auth0_linkedin_id: $auth0_linkedin_id }
  ) {
    affected_rows
    returning {
      id
      email
      role
      external_id
      is_auth0_verified
      display_name
      auth0_linkedin_id
      auth0_user_pass_id
      reference_id
      credits
      billing_org_id
      onboarding_information
      person {
        name
        picture
        slug
        id
      }
      additional_emails
      active
    }
  }
}

mutation UpdateUserAuth0UserPassId(
  $email: String!
  $auth0_user_pass_id: String
) {
  update_users(
    where: { email: { _eq: $email } }
    _set: { auth0_user_pass_id: $auth0_user_pass_id }
  ) {
    affected_rows
    returning {
      id
      email
      role
      external_id
      is_auth0_verified
      display_name
      auth0_linkedin_id
      auth0_user_pass_id
      reference_id
      credits
      billing_org_id
      person {
        name
        picture
        slug
        id
      }
      additional_emails
      active
    }
  }
}

query GetUserByReferenceId($reference_id: String) {
  users(where: { reference_id: { _eq: $reference_id } }, limit: 1) {
    id
    email
    role
    external_id
    is_auth0_verified
    display_name
    auth0_linkedin_id
    auth0_user_pass_id
    reference_id
    credits
    billing_org_id
    person {
      name
      picture
      slug
      id
    }
    additional_emails
    active
  }
}

mutation UpdateUserAdditionalEmails($id: Int!, $additional_emails: jsonb) {
  update_users(
    where: { id: { _eq: $id } }
    _set: { additional_emails: $additional_emails }
  ) {
    affected_rows
    returning {
      id
      email
      role
      external_id
      is_auth0_verified
      display_name
      auth0_linkedin_id
      auth0_user_pass_id
      reference_id
      credits
      billing_org_id
      person {
        name
        picture
        slug
        id
      }
      additional_emails
      onboarding_information
      active
    }
  }
}

query GetUserByAdditionalEmail($email: jsonb) {
  users(where: { additional_emails: { _contains: $email } }, limit: 1) {
    id
    email
    role
    external_id
    is_auth0_verified
    display_name
    auth0_linkedin_id
    auth0_user_pass_id
    reference_id
    credits
    billing_org_id
    person {
      name
      picture
      slug
      id
    }
    additional_emails
    active
  }
}

mutation UpdateUserOnboardingInformation(
  $id: Int!
  $onboarding_information: jsonb
) {
  update_users(
    where: { id: { _eq: $id } }
    _set: { onboarding_information: $onboarding_information }
  ) {
    affected_rows
    returning {
      id
      email
      display_name
      person {
        name
        picture
        slug
        id
      }
      onboarding_information
    }
  }
}

mutation UpdateUserPersonId($id: Int!, $person_id: Int!) {
  update_users(where: { id: { _eq: $id } }, _set: { person_id: $person_id }) {
    affected_rows
    returning {
      id
      email
      display_name
      person {
        name
        picture
        slug
        id
      }
    }
  }
}

query GetUserByPersonIds($person_ids: [Int!]) {
  users(where: { person_id: { _in: $person_ids } }) {
    id
    email
    display_name
    person_id
  }
}

mutation UpdateUserFeatureFlags($id: Int!, $feature_flags: jsonb) {
  update_users(
    where: { id: { _eq: $id } }
    _set: { feature_flags: $feature_flags }
  ) {
    affected_rows
    returning {
      id
      email
      display_name
      person {
        name
        picture
        slug
        id
      }
      feature_flags
    }
  }
}

mutation UpdateUserPreferences($id: Int!, $preferences: jsonb!) {
  update_users(
    where: { id: { _eq: $id } }
    _set: { preferences: $preferences }
  ) {
    affected_rows
    returning {
      id
      email
      display_name
      person {
        name
        picture
        slug
        id
      }
      preferences
    }
  }
}
