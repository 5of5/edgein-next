query GetPerson($slug: String!) {
  people(where: { slug: { _eq: $slug } }) {
    id
    name
    library
    personal_email
    picture
    slug
    status
    type
    work_email
    linkedin
    web3_address
    twitter
    discord
    telegram
    github
    city
    country
    facebook_url
    website_url
    about
    email
    investors(
      order_by: { start_date: desc_nulls_last, end_date: desc_nulls_first }
    ) {
      id
      end_date
      start_date
      function
      title
      vc_firm {
        id
        slug
        name
        logo
        overview
        location_json
        tags
      }
    }
    team_members(
      order_by: { start_date: desc_nulls_last, end_date: desc_nulls_first }
    ) {
      id
      end_date
      start_date
      founder
      function
      title
      company {
        id
        slug
        name
        logo
        overview
        location_json
        tags
      }
    }
    investments {
      investment_round {
        id
        round_date
        round
        amount
        company {
          id
          slug
          name
          logo
          tags
        }
        investments {
          id
          vc_firm {
            id
            slug
            name
            logo
          }
          person {
            id
            slug
            name
            picture
          }
        }
      }
    }
    news_links {
      id
      news {
        id
        date
        text
        link
        kind
        source
        status
        people {
          id
          type
          person_id
        }
      }
    }
    user {
      id
    }
    follows {
      id
      list_id
    }
    people_computed_data {
      title
      tags
      person_id
      location_json
      geopoint
      id
    }
  }
}

fragment PeopleFragment on people {
  id
  created_at
  name
  personal_email
  picture
  slug
  status
  type
  work_email
  linkedin
  github
  city
  country
  facebook_url
  twitter_url
  website_url
  investors(
    limit: 1
    order_by: { start_date: desc_nulls_last, end_date: desc_nulls_first }
  ) {
    id
    end_date
    start_date
    founder
    function
    title
    vc_firm {
      id
      slug
      name
      logo
      location_json
      tags
      website
    }
  }
  team_members(
    limit: 1
    order_by: { start_date: desc_nulls_last, end_date: desc_nulls_first }
  ) {
    id
    end_date
    start_date
    founder
    function
    title
    company {
      id
      slug
      name
      logo
      location_json
      tags
      website
    }
  }
  follows {
    id
    list_id
  }
  people_computed_data {
    title
    tags
    person_id
    location_json
    geopoint
    id
  }
}

query GetPeopleById($id: Int!) {
  people(where: { id: { _eq: $id } }) {
    ...PeopleFragment
  }
}

query GetPeople(
  $limit: Int
  $offset: Int
  $orderBy: [people_order_by!]
  $where: people_bool_exp!
) {
  people(where: $where, order_by: $orderBy, limit: $limit, offset: $offset) {
    ...PeopleFragment
  }
  people_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetAllPersons {
  people {
    id
    name
  }
}

query SearchPeople($query: String, $searchText: jsonb) {
  users(
    where: {
      _or: [
        { email: { _ilike: $query } }
        { additional_emails: { _contains: $searchText } }
        {
          person: {
            _or: [
              { name: { _ilike: $query } }
              { work_email: { _ilike: $query } }
              { personal_email: { _ilike: $query } }
            ]
          }
        }
      ]
    }
    limit: 50
  ) {
    id
    display_name
    email
    person {
      id
      name
      picture
      slug
    }
  }
}

query GetPeopleByDate($date: timestamptz, $library: jsonb) {
  people(
    where: {
      _and: [
        { status: { _eq: "published" } }
        { updated_at: { _gte: $date } }
        { library: { _contains: $library } }
      ]
    }
  ) {
    id
    name
    work_email
    personal_email
    picture
    slug
  }
}

query GetDraftPeople($date: timestamptz, $library: jsonb) {
  people(
    where: {
      _and: [
        { status: { _eq: "draft" } }
        { library: { _contains: $library } }
        { updated_at: { _gte: $date } }
      ]
    }
  ) {
    id
  }
}

mutation UpdatePeopleByPk($set: people_set_input, $id: Int!) {
  update_people_by_pk(_set: $set, pk_columns: { id: $id }) {
    id
    name
    personal_email
    picture
    slug
    status
    type
    work_email
    linkedin
    github
    city
    country
    facebook_url
    twitter_url
    website_url
    about
    email
    team_members {
      id
      end_date
      start_date
      founder
      function
      company {
        id
        slug
        name
        logo
        overview
      }
    }
    investments {
      investment_round {
        id
        round_date
        round
        amount
        company {
          id
          slug
          name
          logo
        }
      }
    }
  }
}

query FindPeopleByNameAndEmail($name: String, $email: String) {
  people(
    where: {
      _and: [
        { _not: { user: {} } }
        {
          _or: [
            { name: { _ilike: $name } }
            { work_email: { _ilike: $email } }
            { personal_email: { _ilike: $email } }
          ]
        }
      ]
    }
    limit: 50
  ) {
    id
    name
    picture
    slug
    user {
      id
    }
  }
}

query FindPeopleByLinkedinUrl($linkedin: String) {
  people(where: { linkedin: { _eq: $linkedin } }, limit: 1) {
    id
    name
    picture
    slug
  }
}

mutation InsertOnboardingClaimProfile($object: people_insert_input!) {
  insert_people_one(object: $object) {
    id
    name
    work_email
    linkedin
  }
}

query FindPeopleByEmail($query: String) {
  people(where: { work_email: { _ilike: $query } }, limit: 25) {
    id
    name
    picture
    slug
    work_email
    personal_email
  }
}

query GetSignUpProfile($email: String, $name: String) {
  people(
    where: {
      _and: [
        { _not: { user: {} } }
        {
          _and: [
            { name: { _eq: $name } }
            {
              _or: [
                { work_email: { _eq: $email } }
                { personal_email: { _eq: $email } }
              ]
            }
          ]
        }
      ]
    }
    limit: 1
  ) {
    id
    name
    picture
    slug
    website_url
    linkedin
    twitter_url
    github
    facebook_url
  }
}

mutation InsertPeople($objects: [people_insert_input!]!) {
  insert_people(
    objects: $objects
    on_conflict: { constraint: people_slug_key, update_columns: [] }
  ) {
    returning {
      id
      status
      linkedin
      slug
      enrichment_priority
    }
  }
}

query GetPeopleByTagsAndLocation($limit: Int, $where: people_bool_exp!) {
  people(where: $where, limit: $limit) {
    id
  }
}
