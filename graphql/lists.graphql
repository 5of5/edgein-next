query GetListUserGroups($where: list_user_groups_bool_exp!) {
  list_user_groups(where: $where) {
    id
    list_id
    list {
      id
      name
      public
      created_at
      created_by {
        id
        display_name
        email
      }
    }
    user_group_id
    user_group {
      id
      name
    }
  }
}

query GetListMembers($where: list_members_bool_exp!) {
  list_members(where: $where) {
    id
    member_type
    list_id
    list {
      id
      name
      public
      created_at
      created_by {
        id
        display_name
        email
      }
    }
    user_id
    user {
      id
      display_name
      email
    }
  }
}

query GetListUserGroupsByListId($listId: Int!) {
  list_user_groups(where: { list_id: { _eq: $listId } }) {
    id
    list_id
    user_group_id
  }
}

mutation InsertListUserGroups($object: list_user_groups_insert_input!) {
  insert_list_user_groups_one(object: $object) {
    id
    list_id
    user_group_id
  }
}

query GetListUserGroupsByListIdAndGroupId(
  $list_id: Int!
  $user_group_id: Int!
) {
  list_user_groups(
    where: {
      _and: [
        { list_id: { _eq: $list_id } }
        { user_group_id: { _eq: $user_group_id } }
      ]
    }
  ) {
    id
    list_id
    user_group_id
  }
}

mutation UpsertList($userId: Int, $name: String) {
  insert_lists_one(
    object: { created_by_id: $userId, name: $name }
    on_conflict: {
      constraint: lists_created_by_id_name_key
      update_columns: created_by_id
    }
  ) {
    id
  }
}

mutation UpsertMembership($userId: Int!, $listId: Int!) {
  insert_list_members_one(
    object: { user_id: $userId, list_id: $listId, member_type: "owner" }
    on_conflict: {
      update_columns: user_id
      constraint: list_members_list_id_user_id_key
    }
  ) {
    id
  }
}

query GetListById($id: Int!) {
  lists(where: { id: { _eq: $id } }, limit: 1) {
    id
    name
    created_by_id
  }
}

mutation DeleteListMembers($where: list_members_bool_exp!) {
  delete_list_members(where: $where) {
    returning {
      id
    }
  }
}

mutation DeleteLists($where: lists_bool_exp!) {
  delete_lists(where: $where) {
    returning {
      id
    }
  }
}

mutation DeleteListUserGroups($where: list_user_groups_bool_exp!) {
  delete_list_user_groups(where: $where) {
    returning {
      id
    }
  }
}

mutation InsertListMembers($object: list_members_insert_input!) {
  insert_list_members_one(object: $object) {
    id
    member_type
    list_id
    list {
      id
      name
      created_at
      created_by {
        id
        display_name
        email
      }
    }
    user_id
    user {
      id
      display_name
      email
    }
  }
}

mutation UpdateListById($listId: Int!, $changes: lists_set_input!) {
  update_lists(where: { id: { _eq: $listId } }, _set: $changes) {
    affected_rows
    returning {
      id
      name
    }
  }
}

mutation TriggerListUpdatedAt($id: Int!, $updated_at: timestamptz!) {
  update_lists(where: { id: { _eq: $id } }, _set: { updated_at: $updated_at }) {
    affected_rows
    returning {
      id
    }
  }
}

query GetLists($limit: Int, $offset: Int, $where: lists_bool_exp!) {
  lists(
    where: $where
    order_by: { created_at: desc }
    limit: $limit
    offset: $offset
  ) {
    id
    name
    description
    total_no_of_resources
    public
    created_at
    updated_at
    created_by {
      id
      display_name
      email
      person {
        id
        name
        slug
        picture
      }
    }
    list_members {
      id
      member_type
      user_id
      user {
        id
        display_name
        email
        person {
          id
          name
          slug
          picture
        }
      }
    }
  }
  lists_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}
